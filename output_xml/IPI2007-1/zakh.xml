<?xml version="1.0" encoding="utf-8"?>
<papers>
  <paper>
    <metadata>
      <annotation value="\Abst{Рассмотрены проблемы построения отказоустойчивых серверов, возникающие в связи с недетерминированностью поведения приложений. Предложена формальная модель, описывающая поведение приложения, основными объектами которой являются ресурсы и события. Предложены алгоритмы протоколирования работы приложения на резервном узле кластера, а также восстановления и продолжения его работы при отказе основного узла. При этом для клиентов сбой остается незаметным, за исключением некоторого увеличения времени обслуживания.}"/>
      <keywords>
        <braces>
          <text value="\KW{сервер приложений; прозрачная отказоустойчивость; процесс; ресурс; событие; контрольная точка; детерминированность}"/>
        </braces>
      </keywords>
    </metadata>
    <fulltext>
      <literature/>
      <text value="zakh"/>
      <text value="СРЕДСТВА ОБЕСПЕЧЕНИЯ ОТКАЗОУСТОЙЧИВОСТИ ПРИЛОЖЕНИЙ$^*$"/>
      <text value="Средства обеспечения отказоустойчивости приложений"/>
      <text value="В."/>
      <text value="Н. Захаров, В."/>
      <text value="А. Козмидиади"/>
      <text value="В."/>
      <text value="Н. Захаров$^1$, В."/>
      <text value="А. Козмидиади$^2$"/>
      <command value="\titel">
        <braces>
          <braces>
            <text value="{}"/>
            <command value="\tit">
              <braces/>
              <braces>
                <braces>
                  <text value="{}"/>
                  <command value="\aut">
                    <braces/>
                    <braces>
                      <braces>
                        <text value="{}"/>
                        <command value="\autkol">
                          <braces/>
                          <braces>
                            <braces>
                              <text value="{}"/>
                              <command value="\titkol">
                                <braces/>
                              </command>
                            </braces>
                          </braces>
                        </command>
                      </braces>
                    </braces>
                  </command>
                </braces>
              </braces>
            </command>
          </braces>
        </braces>
      </command>
      <command value="\vskip">
        <braces>
          <text value="24pt plus 9pt minus 6pt"/>
        </braces>
      </command>
      <command value="\begin">
        <braces>
          <braces>
            <text value="{}"/>
            <text value="2"/>
          </braces>
        </braces>
        <braces/>
      </command>
      <section id="id1">
        <braces>
          <text value="\section{}"/>
        </braces>
        <text value="Введение"/>
        <braces>
          <text value="{}"/>
          <command value="\nwt">
            <braces>
              <text value="Средства вычислительной техники стали использоваться в областях, требующих безотказной работы систем в течение многих лет (24 часа в сутки, 365 дней в году)."/>
            </braces>
          </command>
          <command value="\label">
            <braces>
              <braces>
                <text value="{}"/>
                <text value="st"/>
                <command value="\stat">
                  <braces/>
                  <braces>
                    <braces>
                      <text value="{}"/>
                      <command value="\renewcommand">
                        <braces>
                          <braces>
                            <text value="{}"/>
                            <command value="\thefootnote">
                              <braces/>
                              <braces>
                                <braces>
                                  <text value="{}"/>
                                  <command value="\fnsymbol">
                                    <braces>
                                      <braces>
                                        <text value="{}"/>
                                        <text value="footnote"/>
                                      </braces>
                                    </braces>
                                    <braces/>
                                    <braces/>
                                  </command>
                                </braces>
                              </braces>
                            </command>
                          </braces>
                        </braces>
                      </command>
                    </braces>
                  </braces>
                </command>
              </braces>
            </braces>
          </command>
        </braces>
        <command value="\footnotetext">
          <braces>
            <text value="\footnotetext[1]{}"/>
          </braces>
        </command>
        <text value="Работа выполнена при поддержке РФФИ, гранты №"/>
        <text value="06-07-89188 и №"/>
        <text value="06-07-08072."/>
        <command value="\renewcommand">
          <braces>
            <braces>
              <text value="{}"/>
              <command value="\thefootnote">
                <braces/>
                <braces>
                  <braces>
                    <text value="{}"/>
                    <command value="\arabic">
                      <braces>
                        <braces>
                          <text value="{}"/>
                          <text value="footnote"/>
                        </braces>
                      </braces>
                      <braces/>
                      <braces/>
                      <braces/>
                    </command>
                  </braces>
                </braces>
              </command>
            </braces>
          </braces>
        </command>
        <command value="\footnotetext">
          <braces>
            <text value="\footnotetext[1]{}"/>
          </braces>
        </command>
        <text value="Институт проблем информатики РАН, vzakharov@ipiran.ru"/>
        <command value="\footnotetext">
          <braces>
            <text value="\footnotetext[2]{}"/>
          </braces>
        </command>
        <text value="Институт проблем информатики РАН, kozmidiady"/>
        <command value="\_v">
          <braces>
            <text value="@tochka.ru"/>
          </braces>
          <braces/>
          <braces>
            <text value="К таким областям относятся, например, центры хранения и обработки данных в сетях (системы резервирования билетов, биллинговые, банковские и т.д.), массированные распределенные вычисления (GRID-вычисления) и др."/>
          </braces>
        </command>
        <command value="\thispagestyle">
          <braces>
            <braces>
              <text value="{}"/>
              <text value="headings"/>
            </braces>
          </braces>
          <braces/>
          <braces>
            <text value="Обычно в подобных системах применяются частные решения, ориентированные, в основном, на обеспечение надежного хранения данных (например, файловые серверы, использующие для хранения RAID-контроллеры) и корректного их состояния при отказах (серверы баз данных с транзакционным выполнением запросов). Однако большинство приложений не гарантируют, что не произойдет потери части данных при отказе системы. Обычно предполагается, что клиентские средства должны повторять запросы после восстановления серверов, для того чтобы данные не были потеряны, или что можно сделать возврат по времени на некоторое время назад и повторить работу с этого места. Однако далеко не все клиентские средства и условия применения приложений допускают"/>
          </braces>
        </command>
        <command value="\linebreak">
          <braces>
            <text value="\linebreak"/>
          </braces>
        </command>
        <text value="это. Отказоустойчивые системы для критически важных приложений, корректно решающие проблемы восстановления после сбоев, предлагаемые ведущими производителями, как правило, дороги. Кроме того, они включают специфические серверные и клиентские приложения, не совместимые со стандартными приложениями, не обеспечивающими отказоустойчивость. Примером такого подхода к решению проблемы отказоустойчивости хранения данных являются системы NetApp FAS компании Network Appliance, работающие на базе специализированной операционной системы Data ONTAP"/>
        <command value="\cite">
          <braces>
            <braces>
              <text value="{}"/>
              <text value="1zak"/>
            </braces>
          </braces>
          <braces/>
          <braces>
            <text value=". Построение отказоустойчивых систем, использующих серверы со стандартными приложениями, в свете вышесказанного, является актуальной проблемой, вызывающей значительный интерес. Рассмотрение методов достижения прозрачной отказоустойчивости таких систем и является предметом статьи."/>
          </braces>
          <braces/>
        </command>
      </section>
      <section id="id2">
        <braces>
          <text value="\section{}"/>
        </braces>
        <text value="Основные понятия и подходы"/>
        <braces>
          <text value="{}"/>
          <command value="\nwt">
            <braces>
              <text value="Под"/>
            </braces>
            <braces>
              <braces>
                <text value="{}"/>
                <command value="\bfseries"/>
              </braces>
            </braces>
          </command>
        </braces>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="сервером"/>
        </command>
        <text value="в данной работе понимается вычислительный центр (отдельный компьютер или кластер) в сети, предоставляющий клиентам (пользователям, клиентским компьютерам) определенные услуги, разделяя между ними свои ресурсы. Подобные серверы названы"/>
        <braces>
          <text value="{}"/>
          <command value="\bfseries"/>
        </braces>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="серверами приложений"/>
        </command>
        <text value=". Широко распространенным примером сервера такого типа является файловый сервер, обеспечивающий удаленный коллективный доступ к файловой системе. Часто используются вычислительные серверы, предоставляющие клиентам возможность выполнять на них свои программы (например, в центрах коллективного пользования)."/>
        <braces>
          <text value="{}"/>
          <command value="\looseness">
            <braces>
              <text value="=1"/>
            </braces>
            <braces/>
            <braces>
              <text value="Обычно приложение представляет собой программу или группу программ, работающих в операционной среде, создаваемой операционной систе"/>
            </braces>
          </command>
        </braces>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <text value="один или несколько взаимодействующих"/>
        <braces>
          <text value="{}"/>
          <command value="\bfseries"/>
        </braces>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="процессов"/>
        </command>
        <text value="или потоков ("/>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="threads"/>
        </command>
        <text value=")), которые реализуют функциональность сервера. Для построения отказоустойчивых серверов приложений широко используется кластерная технология. Следуя"/>
        <command value="\cite">
          <braces>
            <braces>
              <text value="{}"/>
              <text value="2zak"/>
            </braces>
          </braces>
          <braces/>
          <braces>
            <text value=","/>
          </braces>
          <braces>
            <braces>
              <text value="{}"/>
              <command value="\bfseries"/>
            </braces>
          </braces>
        </command>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="кластером"/>
        </command>
        <text value=", названа разновидность параллельной или распределенной системы, которая:"/>
        <itemize/>
        <braces>
          <text value="{}"/>
          <command value="\bfseries"/>
        </braces>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="Прозрачная отказоустойчивость"/>
        </command>
        <text value="("/>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="Transparent Fault Tolerance"/>
        </command>
        <text value=","/>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="TFT"/>
        </command>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <text value="это такое его поведение при возникновении аппаратных или программных отказов либо отказов в сети, при котором:"/>
        <itemize/>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <text value="запросы следует повторять, на что клиентские приложения далеко не всегда рассчитаны. В данной работе предполагается, что приложения (прикладные программные средства), выполняемые на сервере, являются стандартными, то есть не имеют специальных средств, обеспечивающих отказоустойчивость. Серьезные исследования в области обеспечения отказоустойчивости серверов были развернуты после создания вычислительных серверов, предназначенных для решения задач, требующих больших вычислительных ресурсов. Решение этих задач выполняется на суперкомпьютерах, обеспечивающих массово-параллельные вычисления и представляющих собой кластеры из сотен и тысяч узлов (процессоров). Однако даже на этих &amp;lt;&amp;lt;монстрах&amp;gt;&amp;gt; решение может требовать десятков или сотен часов, и одиночный сбой, если не предприняты специальные меры, может привести к необходимости начинать работу сначала. Обычно решение вычислительной задачи в таких случаях осуществляется в модели относительно редко взаимодействующих между собой процессов, выполняемых на разных узлах кластера. Эти взаимодействия нужны для координации работы процессов, в частности, для обмена данными и промежуточными"/>
        <command value="\linebreak">
          <braces>
            <text value="\linebreak"/>
          </braces>
        </command>
        <text value="результатами. Взаимодействия опираются на специальный протокол, называемый"/>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="MPI"/>
        </command>
        <text value="("/>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="Message-Passing Interface"/>
        </command>
        <text value=") и представляющий собой стандарт ``de facto&amp;apos;&amp;apos;"/>
        <command value="\cite">
          <braces>
            <braces>
              <text value="{}"/>
              <text value="3zak"/>
            </braces>
          </braces>
          <braces/>
          <braces>
            <text value=". Для преодоления последствий сбоя достаточно давно была разработана и широко применяется технология, опирающаяся на механизм"/>
          </braces>
          <braces>
            <braces>
              <text value="{}"/>
              <command value="\bfseries"/>
            </braces>
          </braces>
        </command>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="контрольных точек"/>
        </command>
        <text value="("/>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="checkpoints"/>
        </command>
        <text value=")"/>
        <text value="4--6"/>
        <text value=". По этой технологии система должна иметь"/>
        <braces>
          <text value="{}"/>
          <command value="\bfseries"/>
        </braces>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="стабильную память"/>
        </command>
        <text value=", которая не меняется при отказах. Соответствующие программные средства периодически сохраняют информацию о состоянии процессов приложения в стабильной памяти. Все процессы также имеют доступ к"/>
        <braces>
          <text value="{}"/>
          <command value="\bfseries"/>
        </braces>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="устройству стабильной памяти"/>
        </command>
        <text value=". В случае отказа или сбоя записанная в стабильную память информация используется для повторения вычисления с момента,"/>
        <command value="\linebreak">
          <braces>
            <text value="\linebreak"/>
          </braces>
        </command>
        <text value="когда была записана эта информация, то есть выполняется"/>
        <braces>
          <text value="{}"/>
          <command value="\bfseries"/>
        </braces>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="откат"/>
        </command>
        <text value="назад по времени. Данные, сохранение которых позволяет выполнить откат, называются"/>
        <braces>
          <text value="{}"/>
          <command value="\bfseries"/>
        </braces>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="контрольной точкой"/>
        </command>
        <text value=". В качестве устройства стабильной памяти может использоваться дисковый том, энергонезависимая оперативная память, память другого узла или узлов кластера. В последнем случае узел, которому требуется сохранить информацию, пересылает ее через быстрый канал связи на другой узел. Стабильная память после отказа одного из узлов должна быть доступной узлу, на котором делается повтор. Однако решение, опирающееся только на контрольные точки, не является прозрачным, поскольку не скрывает от клиентов факт отказа систе"/>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <text value="возврат в каждом процессе к такому скоординированному набору контрольных точек, при котором невозможна противоречивая ситуация. Такая ситуация возникает, когда один процесс вернулся к контрольной точке, после которой он должен получить сообщение от другого процесса, а этот другой процесс вернулся к точке, которая следует за выдачей этого сообщения. Однако при повторе ожидаемое первым процессом сообщение не поступит. В этом случае возможен эффект домино, в результате процессы оказываются отброшены как угодно далеко назад."/>
        <braces>
          <text value="{}"/>
        </braces>
        <text value="В этом состоит"/>
        <command value="\textbf">
          <braces>
            <text value="\textbf{}"/>
          </braces>
          <text value="первая проблема"/>
        </command>
        <text value=", которую необходимо преодолеть. Если нужно, чтобы последствия отказа узла не были видны клиенту, это означает, что клиент не должен:"/>
        <itemize/>
        <command value="\textbf">
          <braces>
            <text value="\textbf{}"/>
          </braces>
          <text value="Вторая проблема"/>
        </command>
        <text value=", которую надо решать, связана с недетерминированностью поведения сервера приложений. Приведем пример. Пусть имеется система продажи билетов на самолеты. Два клиента одновременно обратились к системе с запросом билета на один и тот же рейс. Клиентам безразлично, какие места им зарезервирует система. Систе"/>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <text value="в данном случае, скажем, рейс. Один из процессов захватывает ресурс первым, резервирует место и освобождает ресурс. Потом второй процесс проделывает то же самое. Порядок, в котором в этом примере процессы захватили ресурс, зависит от многих факторов и, в конечном счете, случаен. Однако это не мешает правильному функционированию систе"/>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <text value="получить билеты, причем на разные места. Однако отсутствие детерминизма в поведении приложения приводит к тому, что при повторном выполнении могут быть получены другие результаты: например, клиенту уже сообщено, что ему зарезервировано место №"/>
        <text value="5, а при повторе может получиться, что зарезервировано место №"/>
        <text value="6. Система должна устранить это несоответствие и сделать его невидимым для клиента. Недетерминированность поведения систе"/>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <text value="это следствие, по крайней мере, двух обстоятельств. Во-первых, это присущая системам с разделением времени неопределенность в порядке выполнения процессов. Во-вторых, это конкуренция процессов за общие ресурсы. Перечислим некоторые причины недетерминированного поведения приложений:"/>
        <braces>
          <text value="{}"/>
        </braces>
        <command value="\noindent">
          <braces>
            <text value="\noindent"/>
          </braces>
        </command>
        <itemize/>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <text value="первым пришел, первым захватил. И, наконец, результат работы процесса может зависеть от состояния ресурса, а это состояние может изменить другой процесс, ранее захвативший ресурс. Все это создает значительные трудности при попытках воспроизведения поведения процессов с сохраненной контрольной точки. Прозрачная отказоустойчивость серверов приложений обычно осуществляется переносом приложения на другой узел кластера, идентичный первому по конфигурации аппаратных средств и"/>
        <command value="\linebreak">
          <braces>
            <text value="\linebreak"/>
          </braces>
        </command>
        <text value="операционной среды. Это делается методом, называемым"/>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="snapshot/restore"/>
        </command>
        <text value=". На основном узле (оригинале) периодически фиксируется состояние приложения на этом узле кластера (так называемый"/>
        <braces>
          <text value="{}"/>
          <command value="\bfseries"/>
        </braces>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="снимок"/>
        </command>
        <text value="или"/>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="snapshot"/>
        </command>
        <text value="). После отказа оригинала на резервном узле (копии) делается"/>
        <braces>
          <text value="{}"/>
          <command value="\bfseries"/>
        </braces>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="восстановление"/>
        </command>
        <text value="("/>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="restore"/>
        </command>
        <text value="), то есть восстанавливается последнее зафиксированное состояние приложения. Операционная среда при этом приводится в состояние, которое соответствует моменту изготовления снимка. После этого узел-копия продолжает работу с зафиксированного места. Сравнение метода"/>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="snapshot/restore"/>
        </command>
        <text value="с другими подходами приведено в"/>
        <command value="\cite">
          <braces>
            <braces>
              <text value="{}"/>
              <text value="7zak"/>
            </braces>
          </braces>
          <braces/>
          <braces>
            <text value=". Ниже рассматриваются информационные технологии, позволяющие решить ряд принципиальных вопросов, связанных с реализацией прозрачной отказоустойчивости серверов приложений. Ими являются:"/>
          </braces>
        </command>
        <itemize/>
      </section>
      <section id="id3">
        <braces>
          <text value="\section{}"/>
        </braces>
        <text value="Модель описания поведения приложения"/>
        <braces>
          <text value="{}"/>
          <command value="\nwt">
            <braces>
              <text value="Предлагаемый подход опирается на построение модели вычислений, связанной с использованием понятия времени в многопроцессных приложениях. Впервые подобные проблемы были изучены в классической работе Л. Лампорта"/>
            </braces>
          </command>
          <command value="\cite">
            <braces>
              <braces>
                <text value="{}"/>
                <text value="8zak"/>
              </braces>
            </braces>
            <braces/>
            <braces>
              <text value=". Многопроцессными приложения называются потому, что в них параллельно работают несколько процессов. Процесс ведет"/>
            </braces>
          </command>
          <command value="\mbox">
            <braces>
              <braces>
                <text value="{}"/>
                <text value="себя"/>
              </braces>
            </braces>
            <braces/>
            <braces>
              <text value="детерминированно, пока в предписанном кодом порядке выполняет процессорные инструкции. Конечно, его работа может быть прервана практически в любой момент и процессор передан другому процессу или ядру. Поэтому абсолютное время, которое затрачивает процесс на выполнение определенной работы, не константа, а случайная величина. То же относится к относительному времени, то есть времени, которое процесс занимал процессор, поскольку одни и те же обращения к операционной среде могут вызвать работы разной длительности, а значит потребовать разное время на свое выполнение."/>
            </braces>
            <braces>
              <braces>
                <text value="{}"/>
              </braces>
            </braces>
          </command>
        </braces>
        <text value="Кэшированность инструкций и данных, а также длина хэш-списков влияют на действительное время пребывания в операционной среде. Утрачивает смысл понятие"/>
        <braces>
          <text value="{}"/>
          <command value="\bfseries"/>
        </braces>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="одновременность действий"/>
        </command>
        <text value=", поскольку нельзя установить, выполнили ли два разных процесса какие-либо действия одновременно или одно из них предшествовало другому. Таким образом, с процессом можно связать только его локальное время, которое линейно упорядочивает события, происходившие в этом процессе. Глобальное время, линейно упорядочивающее действия во всех процессах, отсутствует. Расстояние (в этом качестве используется время) между действиями оказывается случайной величиной."/>
        <braces>
          <text value="{}"/>
        </braces>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <text value="например, наборы семафоров SVR4 (System V Release 4), POSIX-семафоры, бинарные семафоры и другие примитивы взаимного исключения (POSIX mutual exclusion locks) и т.д. Подобные средства операционной среды, которые позволяют процессам синхронизировать свою деятельность друг с другом или сериализовать обращения к совместно используемым объектам, будут ниже называться"/>
        <braces>
          <text value="{}"/>
          <command value="\bfseries"/>
        </braces>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="ресурсами"/>
        </command>
        <text value=". С каждым ресурсом связано свое локальное время, линейно упорядочивающее"/>
        <braces>
          <text value="{}"/>
          <command value="\bfseries"/>
        </braces>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="события"/>
        </command>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <text value="случайная величина. Однако события замечательны тем, что они одновременно присутствуют и в локальном времени процесса, и в локальном времени ресурса. Поэтому все, что произошло в истории процесса или/и ресурса до этого события, предшествует ему. Далее будет считаться, что истории и ресурсов, и процессов состоят только из событий, причем между двумя последовательными событиями в жизни процесса последний ведет себя детерминированно."/>
        <braces>
          <text value="{}"/>
        </braces>
        <text value="Это означает, что на поведении процесса сказывается только его предыдущая история, то есть состояние ресурсов, с которыми он взаимодействовал. Это свойство процессов ниже будет называться"/>
        <braces>
          <text value="{}"/>
          <command value="\bfseries"/>
        </braces>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="локальной детерминированностью"/>
        </command>
        <text value=". Этим свойством не обладают ресурсы, поскольку следующее событие в истории ресурса не определяется однозначно по его предыдущей истории. Утверждение, касающееся детерминированного поведения процессов, неявно опирается на предположение, что учтены все ресурсы, которые могут привести к недетерминированности процессов. Таким образом, описанное нами очень неформально время в многопроцессном комплексе представляет собой отношение частичного порядка, введенное на множестве событий. Зная полное состояние комплекса в некоторый момент времени, нельзя однозначно определить, какое событие в истории ресурса наступит следующим. Можно говорить только о вероятности наступления того или иного события. Недетерминированность поведения есть следствие двух обстоятельств. Во-первых, это неопределенность времени, которое тратит процесс на переход от одного события к другому. Во-вторых, конкуренция процессов за общие ресурсы."/>
        <braces>
          <text value="{}"/>
        </braces>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <text value="в истории ресурса. Построение средств обеспечения прозрачной отказоустойчивости приложений опирается на следующее утверждение:"/>
        <command value="\emph">
          <braces>
            <braces>
              <text value="{}"/>
              <text value="Для восстановления работы приложения после отказа достаточно располагать:"/>
            </braces>
          </braces>
        </command>
        <itemize/>
        <text value="Данные, которые нужны для построения графа выполнения, далее называются протоколом."/>
        <text value="Вся эта информация должна находиться в стабильной памяти, не разрушающейся при отказе. Ниже неформально описан алгоритм восстановления работы приложения после отказа, который опирается на наличие контрольной точки и графа выполнения. Будем считать, что в распоряжении имеются средства, позволяющие остановить процесс в тот момент, когда он"/>
        <command value="\textbf">
          <braces>
            <text value="\textbf{}"/>
          </braces>
          <text value="намерен"/>
        </command>
        <text value="совершить некоторую операцию над ресурсом. Заметим, что событие в графе выполнения соответствует не изъявлению намерения, а его удовлетворению, то есть завершению выполнения операции. Предварительно сделаем следующее:"/>
        <itemize/>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <text value="это то, которое соответствует требуемой операции. Посмотрим, наступило ли событие в истории ресурса, которое ему предшествует. Если нет, переведем процесс в состояние ожидания, отметив в предшествующем событии, что данный процесс ожидает его наступления. Если да, разрешим процессу выполняться, то есть выполнить операцию над ресурсом. Пусть некоторый процесс объявляет, что он выполнил операцию над каким-либо ресурсом (это"/>
        <command value="\linebreak">
          <braces>
            <text value="\linebreak"/>
          </braces>
        </command>
        <text value="соответствует моменту протоколирования при оригинальном выполнении). Отыщем для этого процесса в его истории последнее наступившее событие и перейдем к следующему событию в его истории. Это опять то событие, которое мы рассматриваем. Отметим его как &amp;lt;&amp;lt;наступившее&amp;gt;&amp;gt;. Если наступления этого события ожидал какой-нибудь процесс, выведем этот процесс из состояния ожидания. Наконец, разрешим процессу, выполнившему операцию, продолжаться дальше. Когда выясняется, что наступили все события графа выполнения, повторное выполнение считается законченным. Естественным следствием из сказанного является следующее утверждение:"/>
        <command value="\emph">
          <braces>
            <braces>
              <text value="{}"/>
              <text value="Для того, чтобы размер протокола не рос неограниченно, нужно периодически создавать контрольные точки, очищая при этом протокол."/>
            </braces>
          </braces>
          <braces/>
          <braces/>
        </command>
      </section>
      <section id="id4">
        <braces>
          <text value="\section{}"/>
        </braces>
        <text value="Формальное описание модели поведения многопроцессного приложения"/>
        <text value="Опишем формально поведение приложения, неформальное описание которого было приведено выше. Рассматриваются два типа объектов:"/>
        <itemize/>
        <text value="Процесс может выполнять над ресурсом"/>
        <braces>
          <text value="{}"/>
          <command value="\bfseries"/>
        </braces>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="операции"/>
        </command>
        <text value=". Примерами операций являются: захват свободного бинарного семафора или его освобождение; изменение значений семафоров в наборе; получение запроса от клиента или посылка ему сообщения. Предполагается, что два процесса не могут одновременно производить операции над одним и тем же ресурсом, а могут это делать только последовательно. Операция процесса$p$над ресурсом$r$называется"/>
        <braces>
          <text value="{}"/>
          <command value="\bfseries"/>
        </braces>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="событием"/>
        </command>
        <text value="и обозначается как"/>
        <formula id="id5" value="$\{p,\,r,\,m,\,n\}$"/>
        <text value="(назначение переменных$m$и$n$будет объяснено ниже)."/>
        <braces>
          <text value="{}"/>
          <command value="\looseness">
            <braces>
              <text value="=-1"/>
            </braces>
            <braces/>
            <braces>
              <text value="С каждым процессом$p$связывается его история$H_p$"/>
            </braces>
          </command>
        </braces>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <text value="последовательность событий, в которых он участвовал, то есть его операций над ресурсами. В обозначении события$m$"/>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <text value="это номер события в истории$H_p$,"/>
        <formula id="id6" value="$m &amp;gt; 0$"/>
        <text value=". С каждым ресурсом$r$связывается его история$H_r$"/>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <text value="последовательность событий, в которых он участвовал, то есть операций, которые над ним производили процессы. В обозначении события$n$"/>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <text value="это номер события в истории$H_r$,"/>
        <formula id="id7" value="$n &amp;gt; 0$"/>
        <text value=". В начало истории каждого процесса$p$включим"/>
        <braces>
          <text value="{}"/>
          <command value="\bfseries"/>
        </braces>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="фиктивное событие"/>
        </command>
        <formula id="id8" value="$\{p,\,\varnothing ,\,0,\,0\}$"/>
        <text value=", а в начало истории каждого ресурса$r$"/>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <text value="фиктивное событие"/>
        <formula id="id9" value="$\{\varnothing ,\, r,\,0,\,0\}$"/>
        <text value="("/>
        <formula id="id10" value="$\varnothing$"/>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <text value="отсутствующий объект). Если один и тот же процесс$p$выполнил две операции над одним и тем же ресурсом$r$(события"/>
        <formula id="id11" value="$\{p,\,r,\,m_1,\,n_1\}$"/>
        <text value="и"/>
        <formula id="id12" value="$\{p,\,r,\,m_2,\,n_2\}$"/>
        <text value="), причем если"/>
        <formula id="id13" value="$m_1 &amp;lt; m_2$"/>
        <text value=", то"/>
        <formula id="id14" value="$n_1 &amp;lt; n_2$"/>
        <text value=". Верно и обратное, то есть если"/>
        <formula id="id15" value="$n_1 &amp;lt; n_2$"/>
        <text value=", то"/>
        <formula id="id16" value="$m_1 &amp;lt;&#10;m_2$"/>
        <text value=". Событие"/>
        <formula id="id17" value="$\{p_1,\,r_1,\,m_1,\,n_1\}$"/>
        <text value="непосредственно предшествует ("/>
        <formula id="id18" value="$\ll_p (\ll_r)$"/>
        <text value=") в истории$H_p$($H_r$) событию"/>
        <formula id="id19" value="$\{p_2,\,r_2,\,m_2,\,n_2\}$"/>
        <text value=", если"/>
        <formula id="id20" value="$p_1 = p_2$"/>
        <text value="и"/>
        <formula id="id21" value="$m_1 &amp;lt; m_2$"/>
        <text value="("/>
        <formula id="id22" value="$r_1 = r_2$"/>
        <text value="и"/>
        <formula id="id23" value="$n_1 &amp;lt; n_2$"/>
        <text value="), причем в истории$H_p$($H_r$) нет события"/>
        <formula id="id24" value="$\{p_3,\,r_3,\,m_3,\,n_3\}$"/>
        <text value="такого, что"/>
        <formula id="id25" value="$p_1 = p_3$"/>
        <text value="и"/>
        <formula id="id26" value="$m_1 &amp;lt; m_3&#10;&amp;lt; m_2$"/>
        <text value="("/>
        <formula id="id27" value="$r_1 = r_3$"/>
        <text value="и"/>
        <formula id="id28" value="$n_1 &amp;lt; n_3 &amp;lt; n_2$"/>
        <text value="). Транзитивное замыкание отношения"/>
        <formula id="id29" value="$\ll_p (\ll_r)$"/>
        <text value="дает отношение предшествования в истории$H_p$($H_r$), которое обозначим как"/>
        <formula id="id30" value="$&amp;lt;_p (&amp;lt;_r)$"/>
        <text value=". Для этих отношений должны выполняться следующие аксиомы, которые их связывают:"/>
        <command value="\begin"/>
        <text value="p,"/>
        <text value="r,"/>
        <text value="m_1,"/>
        <text value="n_1"/>
        <text value="&amp;lt;_p"/>
        <text value="p,"/>
        <text value="r,"/>
        <text value="m_2,"/>
        <text value="n_2"/>
        <command value="\equiv"/>
        <command value="\equiv"/>
        <text value="p,"/>
        <text value="r,"/>
        <text value="m_1,"/>
        <text value="n_1"/>
        <text value="&amp;lt;_r"/>
        <text value="p,"/>
        <text value="r,"/>
        <text value="m_2,"/>
        <text value="n_2"/>
        <text value=";"/>
        <command value="\end">
          <braces>
            <braces>
              <text value="{}"/>
              <text value="multline*"/>
            </braces>
          </braces>
          <braces/>
        </command>
        <command value="\vspace*">
          <braces>
            <braces>
              <text value="{}"/>
              <text value="-18pt"/>
            </braces>
          </braces>
          <braces/>
        </command>
        <command value="\begin">
          <braces>
            <text value="&amp;amp;"/>
          </braces>
        </command>
        <text value="p_1, r_1, m_1, n_1"/>
        <text value="&amp;lt;_p"/>
        <text value="p_1,"/>
        <text value="r_2,"/>
        <text value="m_2,"/>
        <text value="n_2"/>
        <text value="&amp;lt;_r"/>
        <text value="&amp;amp;&amp;lt;_r"/>
        <text value="p_2, r_2, m_3, n_3"/>
        <text value="&amp;lt;_p"/>
        <text value="p_2,"/>
        <text value="r_1,"/>
        <text value="m_4,"/>
        <text value="n_4"/>
        <command value="\supset"/>
        <text value="&amp;amp;"/>
        <command value="\supset"/>
        <text value="p_1,"/>
        <text value="r_1,"/>
        <text value="m_1,"/>
        <text value="n_1"/>
        <text value="&amp;lt;_r"/>
        <text value="p_2,"/>
        <text value="r_1,"/>
        <text value="m_4,"/>
        <text value="n_4"/>
        <text value=";"/>
        <command value="\end">
          <braces>
            <braces>
              <text value="{}"/>
              <text value="align*"/>
            </braces>
          </braces>
          <braces/>
        </command>
        <command value="\vspace*">
          <braces>
            <braces>
              <text value="{}"/>
              <text value="-18pt"/>
            </braces>
          </braces>
          <braces/>
        </command>
        <command value="\begin">
          <braces>
            <text value="&amp;amp;"/>
          </braces>
        </command>
        <text value="p_1,"/>
        <text value="r_1,"/>
        <text value="m_1,"/>
        <text value="n_1"/>
        <text value="&amp;lt;_r"/>
        <text value="p_2,"/>
        <text value="r_1,"/>
        <text value="m_2,"/>
        <text value="n_2"/>
        <text value="&amp;lt;_p"/>
        <text value="&amp;amp;&amp;lt;_p"/>
        <text value="p_2,"/>
        <text value="r_2,"/>
        <text value="m_3,"/>
        <text value="n_3"/>
        <text value="&amp;lt;_r"/>
        <text value="p_1,"/>
        <text value="r_2,"/>
        <text value="m_4,"/>
        <text value="n_4"/>
        <command value="\supset"/>
        <text value="&amp;amp;"/>
        <command value="\supset"/>
        <text value="p_1,"/>
        <text value="r_1,"/>
        <text value="m_1,"/>
        <text value="n_1"/>
        <text value="&amp;lt;_p"/>
        <text value="p_1,"/>
        <text value="r_2,"/>
        <text value="m_4,"/>
        <text value="n_4"/>
        <text value="."/>
        <command value="\end">
          <braces>
            <braces>
              <text value="{}"/>
              <text value="align*"/>
            </braces>
          </braces>
          <braces/>
          <braces>
            <text value="Введем отношение"/>
          </braces>
          <braces>
            <braces>
              <text value="{}"/>
              <command value="\bfseries"/>
            </braces>
          </braces>
        </command>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="непосредственного предшествования событий"/>
        </command>
        <text value=","/>
        <formula id="id31" value="$\Rightarrow$"/>
        <text value=", следующим образом (в обозначениях событий переменные$m$и$n$для краткости опущены):"/>
        <command value="\vspace*">
          <braces>
            <braces>
              <text value="{}"/>
              <text value="-12pt"/>
            </braces>
          </braces>
          <braces/>
        </command>
        <command value="\begin">
          <braces>
            <text value="&amp;amp;"/>
          </braces>
        </command>
        <text value="p_1,"/>
        <text value="r_1"/>
        <command value="\Rightarrow"/>
        <text value="p_2,"/>
        <text value="r_2"/>
        <command value="\stackrel">
          <braces>
            <braces>
              <text value="{}"/>
              <command value="\mathrm">
                <braces>
                  <braces>
                    <text value="{}"/>
                    <text value="def"/>
                  </braces>
                </braces>
                <braces/>
                <braces/>
                <braces>
                  <braces>
                    <text value="{}"/>
                    <text value="="/>
                  </braces>
                </braces>
                <braces/>
              </command>
            </braces>
          </braces>
        </command>
        <text value="&amp;amp;"/>
        <command value="\stackrel">
          <braces>
            <braces>
              <text value="{}"/>
              <command value="\mathrm">
                <braces>
                  <braces>
                    <text value="{}"/>
                    <text value="def"/>
                  </braces>
                </braces>
                <braces/>
                <braces/>
                <braces>
                  <braces>
                    <text value="{}"/>
                    <text value="="/>
                  </braces>
                </braces>
                <braces/>
                <braces>
                  <text value="((p_1 = p_2)"/>
                </braces>
              </command>
            </braces>
          </braces>
        </command>
        <text value="("/>
        <text value="p_1,"/>
        <text value="r_1"/>
        <command value="\ll">
          <braces>
            <text value="_p"/>
          </braces>
        </command>
        <text value="p_2,"/>
        <text value="r_2"/>
        <text value="))"/>
        <command value="\lor"/>
        <text value="&amp;amp;"/>
        <command value="\lor">
          <braces>
            <text value="((r_1 = r_2)"/>
          </braces>
        </command>
        <text value="("/>
        <text value="p_1,"/>
        <text value="r_1"/>
        <command value="\ll">
          <braces>
            <text value="_r"/>
          </braces>
        </command>
        <text value="p_2,"/>
        <text value="r_2"/>
        <text value="))"/>
        <text value="."/>
        <command value="\end">
          <braces>
            <braces>
              <text value="{}"/>
              <text value="align*"/>
            </braces>
          </braces>
          <braces/>
          <braces>
            <text value="Будем рассматривать события как вершины направленного графа$G$, причем от вершины$V_1$ведет дуга к вершине$V_2$, если и только если"/>
          </braces>
        </command>
        <formula id="id32" value="$V_1\Rightarrow V_2$"/>
        <text value=". Транзитивное замыкание отношения непосредственного предшествования дает"/>
        <braces>
          <text value="{}"/>
          <command value="\bfseries"/>
        </braces>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="отношение предшествования событий"/>
        </command>
        <text value=", которое мы обозначим через"/>
        <formula id="id33" value="$\rightarrow$"/>
        <text value=". Вершина$V_1$предшествует вершине$V_2$, если в графе существует путь, ведущий от$V_1$к$V_2$. Граф$G$называется"/>
        <braces>
          <text value="{}"/>
          <command value="\bfseries"/>
        </braces>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="графом выполнения приложения"/>
        </command>
        <text value=". Добавим теперь две аксиомы, которые позволяют доказать, что граф$G$не может иметь циклов, то есть является направленным ациклическим графом:"/>
        <command value="\begin">
          <braces>
            <text value="("/>
          </braces>
        </command>
        <text value="p,"/>
        <text value="r_i,"/>
        <text value="m_1,"/>
        <text value="n_1"/>
        <text value="&amp;amp;"/>
        <command value="\rightarrow"/>
        <text value="p,"/>
        <text value="r_j,"/>
        <text value="m_2,"/>
        <text value="n_2"/>
        <text value=")"/>
        <command value="\supset">
          <braces>
            <text value="(m_1 &amp;lt; m_2)"/>
          </braces>
        </command>
        <text value=","/>
        <text value="("/>
        <text value="p_i,"/>
        <text value="r,"/>
        <text value="m_1,"/>
        <text value="n_1"/>
        <text value="&amp;amp;"/>
        <command value="\rightarrow"/>
        <text value="p_j,"/>
        <text value="r,"/>
        <text value="m_2,"/>
        <text value="n_2"/>
        <text value=")"/>
        <command value="\supset">
          <braces>
            <text value="(n_1 &amp;lt; n_2)"/>
          </braces>
        </command>
        <text value="."/>
        <command value="\end">
          <braces>
            <braces>
              <text value="{}"/>
              <text value="align*"/>
            </braces>
          </braces>
          <braces/>
          <braces>
            <text value="Подграф"/>
          </braces>
        </command>
        <formula id="id34" value="$G^\prime$"/>
        <text value="графа$G$называется"/>
        <braces>
          <text value="{}"/>
          <command value="\bfseries"/>
        </braces>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="правильным"/>
        </command>
        <text value=", если вместе с любой вершиной$V$подграфа"/>
        <formula id="id35" value="$G^\prime$"/>
        <text value="он содержит также все вершины"/>
        <formula id="id36" value="$V^\prime$"/>
        <text value="графа$G$такие, что"/>
        <formula id="id37" value="$V^\prime \rightarrow V$"/>
        <text value="в графе$G$. Отношение"/>
        <formula id="id38" value="$\rightarrow$"/>
        <text value="описывает частично упорядоченное время в многопроцессорном узле, процессы которого ведут себя недетерминировано. Укажем на имеющий место"/>
        <braces>
          <text value="{}"/>
          <command value="\bfseries"/>
        </braces>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="дуализм"/>
        </command>
        <text value="процессов и ресурсов: все аксиомы остаются верными, если всюду под процессами иметь в виду ресурсы, и наоборот. Вершины графа, соответствующие событиям вида"/>
        <formula id="id39" value="$\{\varnothing ,\,r\}$"/>
        <text value=", называются входными вершинами или описателями ресурсов. Входные вершины не имеют предшествующих им вершин. Два выполнения одного и того же приложения называются"/>
        <braces>
          <text value="{}"/>
          <command value="\bfseries"/>
        </braces>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="одинаковыми"/>
        </command>
        <text value=", если их графы совпадают. В отношении приложений предполагается, что они используют только штатные средства операционной среды, в которой работают. В частности, считается, что они не требуют внесения изменений в код операционной системы и не применяют собственные примитивы синхронизации и блокировки, которые могут быть построены, например, с помощью ассемблерных программ, применяющих атомарные машинные инструкции. Для того чтобы имелась возможность восстановить работу приложения после отказа, необходимо заносить в стабильную память:"/>
        <itemize/>
        <text value="Это занесение, называемое далее протоколированием, нужно делать динамически, по мере необходимости. Весь набор подобных записей называется"/>
        <braces>
          <text value="{}"/>
          <command value="\bfseries"/>
        </braces>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="протоколом"/>
        </command>
        <text value=". Протокол, находящийся в стабильной памяти, должен быть достаточным для построения графа выполнения приложения после последней контрольной точки. Если это условие выполняется, можно утверждать следующее:"/>
        <enumerate/>
        <text value="Алгоритмы ведения протоколов и повторного выполнения приложения рассмотрены также в"/>
        <command value="\cite">
          <braces>
            <braces>
              <text value="{}"/>
              <text value="9zak"/>
            </braces>
          </braces>
          <braces/>
          <braces>
            <text value="."/>
          </braces>
        </command>
      </section>
      <section id="id40">
        <braces>
          <text value="\section{}"/>
        </braces>
        <text value="Аппаратная и операционная платформы сервера приложений"/>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <text value="резервным. Оперативная память резервного узла выступает в роли стабильной памяти. На основных узлах происходит оригинальное выполнение приложения. В случае отказа одного из основных узлов на резервном узле происходит восстановление состояния приложения, выполнявшегося на отказавшем узле, после чего он берет на себя функции основного узла. Оперативная память резервного узла может выступать в роли стабильной памяти, поскольку она:"/>
        <itemize/>
        <text value="Реализация предлагаемых методов подразумевает внесение некоторых изменений в код ядра системы, поэтому предполагается, что узлы кластера работают под управлением UNIX-подобной системы с открытым кодом."/>
        <command value="\vspace*">
          <braces>
            <braces>
              <text value="{}"/>
              <text value="-6pt"/>
            </braces>
          </braces>
          <braces/>
        </command>
      </section>
      <section id="id41">
        <braces>
          <text value="\section{}"/>
        </braces>
        <text value="Состав приложения"/>
        <command value="\vspace*">
          <braces>
            <braces>
              <text value="{}"/>
              <text value="-2pt"/>
            </braces>
          </braces>
          <braces/>
          <braces>
            <text value="В начале работы приложения для него создается исходный процесс, например, с помощью функции"/>
          </braces>
        </command>
        <command value="\emph">
          <braces>
            <braces>
              <text value="{}"/>
              <text value="execve("/>
            </braces>
          </braces>
        </command>
        <text value=")"/>
        <text value=". Далее приложение во время работы может создавать (открывать) новые ресурсы (процессы и потоки, файлы, трубы ("/>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="pipes"/>
        </command>
        <text value="), наборы семафоров, бинарные семафоры ("/>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="mutex&amp;apos;s"/>
        </command>
        <text value=") и т.д.) и закрывать (уничтожать) их. В каждый момент работы приложения оно состоит из множества открытых ресурсов, которое будет называться"/>
        <braces>
          <text value="{}"/>
          <command value="\bfseries"/>
        </braces>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="составом приложения"/>
        </command>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <text value="исключается из него. Заметим, что создаваемым ресурсом может быть новый процесс или поток. Предполагаем, что приложение не может использовать ресурсы, не входящие в его состав. Для упрощения изложения будем считать, что на сервере приложений функционирует только одно приложение, для которого должна быть обеспечена отказоустойчивость. Оно называется"/>
        <braces>
          <text value="{}"/>
          <command value="\bfseries"/>
        </braces>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="контролируемым"/>
        </command>
        <text value=". Помимо процессов и потоков контролируемого приложения на кластере могут выполняться другие процессы, но они не должны влиять на работу контролируемого приложения."/>
      </section>
      <section id="id42">
        <braces>
          <text value="\section{}"/>
        </braces>
        <text value="Функциональные компоненты реализации прозрачной отказоустойчивости"/>
        <text value="В разработанной реализации восстановление состояния приложения после отказа и продолжение его работы реализуется компонентами, выполняющими следующие функции:"/>
        <itemize/>
        <text value="Перечисленные компоненты можно разделить на две группы:"/>
        <enumerate/>
        <command value="\vspace*">
          <braces>
            <braces>
              <text value="{}"/>
              <text value="-6pt"/>
            </braces>
          </braces>
          <braces/>
        </command>
      </section>
      <section id="id43">
        <braces>
          <text value="\section{}"/>
        </braces>
        <text value="Организация перехвата обращений к ресурсам и определение принадлежности к приложению"/>
        <text value="Перехват обращений к ресурсам необходим, прежде всего, для того чтобы осуществить протоколирование. Перехват нужен также в случае отказа основного узла для повторения работы приложения, начиная с последней контрольной точки. Способ перехвата зависит от типа ресурса и может осуществляться как в пользовательском режиме, так и в режиме ядра. При выборе режима следует учитывать два обстоятельства:"/>
        <enumerate/>
        <text value="Для реализации перехватов в ядре необходимо внести изменения в код ядра. Например, чтобы организовать перехват обращений к наборам семафоров, нужно внести изменения в модуль ядра, который ответствен за обслуживание семафоров. Перехват обращений в пользовательском режиме не требует внесения изменений в библиотечные функции, а делается с помощью определенной &amp;lt;&amp;lt;надстройки&amp;gt;&amp;gt; над ними. О структуре программ перехвата, которые содержат функции обращения к LOGGING-компоненту и REPLAY-компоненту, будет сказано далее. Здесь отметим, что перехват может выполняться как при обращении к ресурсу для выполнения операции, так и при обращении к нему с подтверждением, что намерение удовлетворено, то есть операция выполнена. Перехватив обращение к ресурсу, следует определить, входит ли он в состав приложения, поскольку если нет, протоколировать такое обращение не нужно. Аналогично и при повторном выполнении. Компонент определения основан на том, что свойство принадлежности является"/>
        <braces>
          <text value="{}"/>
          <command value="\bfseries"/>
        </braces>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="наследуемым"/>
        </command>
        <text value=". Относительно исходного процесса приложения его вхождение в состав должно быть известно. Все ресурсы, созданные процессами, входящими в состав приложения, считаются также входящими в этот состав. Учитывая, что перехват обращений к ресурсам всегда выполняется в контексте обращающегося процесса, при создании новых процессов (потоков) в их контексте можно отметить, что новый процесс или поток также входит в состав приложения. Если происходит обращение к ресурсу, отличному от создания или уничтожения процесса (потока), то достаточно проверить, входит ли обращающийся процесс (поток) в состав приложения. Если это так, он может обращаться только к ресурсам, входящим в этот состав."/>
      </section>
      <section id="id44">
        <braces>
          <text value="\section{}"/>
        </braces>
        <text value="Создание контрольных точек"/>
        <text value="Контрольная точка (или снимок) представляет данные, необходимые для восстановления состо"/>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <text value="это событие в истории всех процессов, то есть такая вершина в графе выполнения, которой непосредственно предшествуют события в историях всех процессов. Контрольная точка включает для каждого процесса следующие элементы (это далеко не полный список):"/>
        <itemize/>
        <text value="Контрольная точка для всего приложения в целом должна включать следующие элементы (список также далек от полноты):"/>
        <itemize/>
        <text value="При каждом создании контрольной точки она заносится в стабильную память, замещая предыдущую контрольную точку. При восстановлении выполняется обратная работа, то есть на основании последней созданной контрольной точки воссоздаются процессы и их потоки, а также все их ресурсы в том состоянии, в котором они находились в момент создания этой точки. В частности, это касается состояния файловых систем и отдельных файлов, для чего применяется специальная технология клонов."/>
        <braces>
          <text value="{}"/>
        </braces>
      </section>
      <section id="id45">
        <braces>
          <text value="\section{}"/>
        </braces>
        <text value="Протоколирование работы приложения между контрольными точками"/>
        <text value="При восстановлении приложения в другом экземпляре среды неизбежно повторение работы приложения, начинающееся с последней контрольной точки, достигнутой при работе приложения в оригинальной среде. Это приводит к необходимости протоколировать при оригинальном выполнении приложения факты обращений к некоторым ресурсам, то есть хранить историю ресурсов, которую после размещения в стабильной памяти можно называть"/>
        <braces>
          <text value="{}"/>
          <command value="\bfseries"/>
        </braces>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="журналом"/>
        </command>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <text value="это именованный список последовательных записей событий. Порядок записей в списке соответствует порядку наступления событий в истории ресурса. Имена списков находятся во взаимно однозначном соответствии с именами ресурсов. Перехват обращения к ресурсу делается непосредственно после выполнения операции над ресурсом, и в протокол заносятся сведения о факте выполнения операции. Протоколирование начинается перед началом работы приложения, то есть перед тем, как уже существующий процесс превращается в исходный процесс приложения. Такое протоколирование и есть основное назначение LOGGING-компонента. Поскольку он работает в контексте процессов приложения при оригинальном выполнении, эффективность его программной реализации очень важна. Время выполнения отдельного запроса клиента линейно зависит от времени работы LOGGING-компонента, связанного с обслуживанием запроса. Далее предполагается атомарность занесения записей в протокол, которая означает выполнение следующих четырех предположений:"/>
        <command value="\medskip"/>
        <command value="\textbf">
          <braces>
            <text value="\textbf{}"/>
          </braces>
          <text value="Предположение 1:"/>
        </command>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="Занесение происходит"/>
        </command>
        <command value="\textbf">
          <braces>
            <text value="\textbf{}"/>
          </braces>
          <text value="синхронно"/>
        </command>
        <text value="с выполнением процесса. Например, это может означать, что драйвер стабильной памяти всегда работает в режиме сквозной записи ("/>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="write-through"/>
        </command>
        <text value=");"/>
        <command value="\medskip"/>
        <command value="\textbf">
          <braces>
            <text value="\textbf{}"/>
          </braces>
          <text value="Предположение 2:"/>
        </command>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="Занесение записи, соответствующей некоторому событию, происходит"/>
        </command>
        <command value="\textbf">
          <braces>
            <text value="\textbf{}"/>
          </braces>
          <text value="своевременно"/>
        </command>
        <text value=", то есть до того, как для этого же ресурса может наступить следующее событие;"/>
        <command value="\medskip"/>
        <command value="\textbf">
          <braces>
            <text value="\textbf{}"/>
          </braces>
          <text value="Предположение 3:"/>
        </command>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="Занесение происходит"/>
        </command>
        <command value="\textbf">
          <braces>
            <text value="\textbf{}"/>
          </braces>
          <text value="неделимо"/>
        </command>
        <text value=", то есть если в момент занесения происходит отказ, в протоколе запись либо будет присутствовать, либо нет, промежуточного состояния протокола с искаженной записью быть не может;"/>
        <command value="\medskip"/>
        <command value="\textbf">
          <braces>
            <text value="\textbf{}"/>
          </braces>
          <text value="Предположение 4:"/>
        </command>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="Занесение записи по некоторому событию происходит"/>
        </command>
        <command value="\textbf">
          <braces>
            <text value="\textbf{}"/>
          </braces>
          <text value="одновременно"/>
        </command>
        <text value="с событием, то есть если происходит отказ, то возможно лишь одно из двух: событие наступило, и о нем есть запись в протоколе; либо событие не наступило, и о нем нет записи в протоколе."/>
        <command value="\medskip">
          <braces>
            <text value="Предположение 1 (о синхронности) может привести к значительному увеличению времени ответа на запросы. Если в качестве стабильной используется память резервного"/>
          </braces>
        </command>
        <command value="\mbox">
          <braces>
            <braces>
              <text value="{}"/>
              <text value="узла"/>
            </braces>
          </braces>
          <braces/>
          <braces>
            <text value=", синхронность означает, что процесс, который затребовал занесения записи в протокол, приостанавливается до тех пор, пока от резервного узла не будет получено подтверждение приема. Поэтому время реакции системы на запрос клиента увеличивается на некоторую величину. Эта величина равна промежутку времени от момента запроса на занесение записи в протокол до момента получения подтверждения. Известен способ, позволяющий ослабить это предположение. Предположение 2 (о своевременности). Наступление события, например, увеличение значения семафора некоторым процессом, может привести к тому, что в другом процессе становится возможным наступление другого события (уменьшение значения семафора). Своевременность гарантирует, что в протоколе первое событие (увеличение значения) будет предшество"/>
          </braces>
        </command>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <text value="это требование к драйверу стабильной памяти, реализация его не представляет особых трудностей. Предположение 4 (об одновременности) является очень жестким, однако отказаться от него нелегко, а решение может зависеть от типа ресурса. Возможно, что определенный выше протокол избыточен, и в нем зафиксированы лишние события. Уменьшение количества фиксируемых событий может опираться на знание причинно-следственных отношений между событиями, а такое знание отсутствует. Следствием принятых предположений является следующее утверждение."/>
        <command value="\textbf">
          <braces>
            <text value="\textbf{}"/>
          </braces>
          <text value="Теорема 1."/>
        </command>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="По журналам, находящимся в стабильной памяти, однозначно восстанавливается граф, являющийся правильным подграфом графа выполнения приложения, начиная с последнего сделанного снимка."/>
        </command>
      </section>
      <section id="id46">
        <braces>
          <text value="\section{}"/>
        </braces>
        <text value="Повторение работы приложения"/>
        <text value="Если на основном узле происходит отказ, на резервном узле выполняется восстановление состояния приложения на момент создания контрольной точки. Однако на основном узле после"/>
        <command value="\linebreak">
          <braces>
            <text value="\linebreak"/>
          </braces>
        </command>
        <text value="созда"/>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <text value="повторить выполнение приложения, начиная с момента создания последней контрольной точки и до момента возникновения отказа. Такое повторение преследует две цели:"/>
        <enumerate/>
        <text value="REPLAY-компонент, располагая протоколом выполнения приложения после создания последней контрольной точки, сначала строит граф выполнения приложения. Это выполняется в режиме ядра. Далее начинается повторение. Оно опирается на перехват обращений к ресурсам, причем в отличие от LOGGING-компонента нужен перехват как непосредственно"/>
        <command value="\textbf">
          <braces>
            <text value="\textbf{}"/>
          </braces>
          <text value="до"/>
        </command>
        <text value=", так и непосредственно"/>
        <command value="\textbf">
          <braces>
            <text value="\textbf{}"/>
          </braces>
          <text value="после"/>
        </command>
        <text value="выполнения операции над ресурсом. Получив управление до выполнения операции, REPLAY-компонент проверяет, действительно ли в соответствии с графом выполнения в истории ресурса должно наступить соответствующее событие. Если это не так, процесс переводится в состо"/>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <text value="в пользовательском режиме. Помимо описанных выше основных функций, которые выполняются после отказа, REPLAY-компонент выполняет и некоторые вспомогательные функции. Более формально алгоритм восстановления работы приложения после отказа можно описать следующим образом. Свяжем с журналом каждого ресурса$r$натуральное число"/>
        <formula id="id47" value="$n(r)$"/>
        <text value=", равное номеру первой, еще не обработанной записи в журнале. Пусть"/>
        <formula id="id48" value="$n(r) =0$"/>
        <text value=", если журнал пуст или если обработаны все его записи (записи в журнале нумеруются, начиная с 1). Пусть$n$таково, что"/>
        <formula id="id49" value="$0 &amp;lt; n \leq N_r$"/>
        <text value="($N_r$"/>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <text value="число записей в журнале ресурса$r$); определим функцию"/>
        <formula id="id50" value="$p_r(n)$"/>
        <text value="равной идентификатору процесса из$n$-й записи журнала."/>
        <braces>
          <text value="{}"/>
          <command value="\looseness">
            <braces>
              <text value="=1"/>
            </braces>
            <braces/>
            <braces>
              <text value="Используя снимок (контрольную точку), приведем приложение в состояние, соответствующее этому снимку, после чего разрешим процессам приложения выполняться. Когда процесс$p$проявляет намерение выполнить операцию над ресурсом$r$, проверяется условие"/>
            </braces>
          </command>
          <formula id="id51" value="$(n(r)&amp;gt;0) \&amp;amp; (p_r(n(r)) =p)$"/>
          <text value=". Если это условие не выполняется, процесс переводится в состояние ожидания. Если выполняется, процессу дается возможность выполнить операцию над ресурсом. Для выполнения операции могут потребоваться специфические данные (например, реальное время, полученное на узле-оригинале). Эти данные берутся из записи журнала. После того как процесс$p$выполнил операцию над ресурсом$r$, следующим образом изменяется"/>
          <formula id="id52" value="$n(r)$"/>
          <text value=":$$n(r) = (n(r) + 1)("/>
          <command value="\mathrm">
            <braces>
              <braces>
                <text value="{}"/>
                <text value="mod"/>
              </braces>
            </braces>
            <braces/>
          </command>
        </braces>
        <text value="N_r + 1)"/>
        <text value=".$$Затем просматриваются все процессы, ранее переведенные в состояние ожидания. Если среди них оказывается процесс, для которого выполняется условие"/>
        <formula id="id53" value="$(n(r)&amp;gt;0) \&amp;amp; (p_r(n(r)) = p)$"/>
        <text value=", но уже с новым значением"/>
        <formula id="id54" value="$n(r)$"/>
        <text value=", процесс выводится из ожидания и ему предоставляется возможность выполнить желаемую операцию. Если оказывается, что для всех$r$"/>
        <formula id="id55" value="$n(r)=0$"/>
        <text value=", все процессы, переведенные в ожидание, выводятся из этого состояния. Восстановление работоспособного состояния приложения после этого считается завершенным. Сформулируем два утверждения, касающиеся правильности описанного алгоритма."/>
        <command value="\textbf">
          <braces>
            <text value="\textbf{}"/>
          </braces>
          <text value="Теорема 2."/>
        </command>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="Выполнение приложения на основном узле после изготовления последнего снимка, описанное журналами, находящимися в стабильной памяти, одинаково с выполнением приложения в соответствии с приведенным выше алгоритмом."/>
        </command>
        <text value="Доказательство этого утверждения опирается на Теорему 1 и делается индукцией по суммарной длине всех журналов, находящихся в стабильной памяти."/>
        <command value="\textbf">
          <braces>
            <text value="\textbf{}"/>
          </braces>
          <text value="Теорема 3."/>
        </command>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="Выполнение приложения в соответствии с приведенным выше алгоритмом не может привести к тупиковым ситуациям."/>
        </command>
        <text value="Справедливость этого утверждения есть прямое следствие подразумеваемой корректности приложения. Это означает, что независимо от порядка поступления клиентских запросов и времени, затрачиваемого процессами для перехода от одного события к другому, приложение не должно зацикливаться или попадать в тупиковую ситуацию."/>
      </section>
      <section id="id56">
        <braces>
          <text value="\section{}"/>
        </braces>
        <text value="Некоторые вопросы программной реализации"/>
        <command value="\subsection*">
          <braces>
            <braces>
              <text value="{}"/>
              <text value="Протоколируемые события"/>
            </braces>
          </braces>
          <braces/>
          <braces>
            <text value="Набор протоколируемых событий и содержимое записей о каждом событии должны быть достаточными:"/>
          </braces>
        </command>
        <itemize/>
        <command value="\subsection*">
          <braces>
            <braces>
              <text value="{}"/>
              <text value="Классы учитываемых ресурсов"/>
            </braces>
          </braces>
          <braces/>
        </command>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <text value="это те ресурсы, работа с которыми может повлиять на детерминированность поведения приложения, а потому обращения к ним следует протоколировать. Для многих приложений"/>
        <command value="\textbf">
          <braces>
            <text value="\textbf{}"/>
          </braces>
          <text value="классы ресурсов"/>
        </command>
        <text value=", которые нужно учитывать, исчерпываются следующим списком:"/>
        <itemize/>
        <text value="Кроме перечисленных классов в список включается также класс"/>
        <braces>
          <text value="{}"/>
          <command value="\bfseries"/>
        </braces>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="административных"/>
        </command>
        <text value="ресурсов, который используется для служебных целей."/>
        <command value="\subsection*">
          <braces>
            <braces>
              <text value="{}"/>
              <text value="Типы протоколируемых событий"/>
            </braces>
          </braces>
          <braces/>
        </command>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <text value="создание (открытие), чтение, изменение, уничтожение (закрытие). В составе каждой из групп, в зависимости от класса ресурса, может быть нуль или несколько операций. Однако для построения графа выполнения важно деление операций на три"/>
        <command value="\textbf">
          <braces>
            <text value="\textbf{}"/>
          </braces>
          <text value="типа"/>
        </command>
        <text value=":"/>
        <enumerate/>
        <text value="Для повторного выполнения не требуется дальнейшая детализация операций типа"/>
        <command value="\mbox">
          <braces>
            <braces>
              <text value="{}"/>
              <text value="OTHER"/>
            </braces>
          </braces>
          <braces/>
          <braces>
            <text value=", однако включение конкретных операций в этот тип (то есть необходимость их протоколирования) зависит от класса ресурса. Для ресурсов некоторых классов могут отсутствовать операции типа CREATE и DESTROY. Примером могут служить бинарные семафоры."/>
          </braces>
        </command>
        <command value="\subsection*">
          <braces>
            <braces>
              <text value="{}"/>
              <text value="Запись протокола и ее состав"/>
            </braces>
          </braces>
          <braces/>
          <braces>
            <braces>
              <text value="{}"/>
              <command value="\bfseries"/>
            </braces>
          </braces>
        </command>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="Запись протокола"/>
        </command>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <text value="описание одного события в историях процесса и ресурса. Это событие заключается в том, что процесс выполнил некоторую операцию над ресурсом. Удобно, чтобы длина записи была кратна 8. Запись заносится в протокол и содержит:"/>
        <enumerate/>
        <text value="Протоколирование создания процессов и потоков осуществляется в пользовательском режиме. Поэтому при создании процесса в по"/>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <text value="систем"/>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <text value="псевдоним ресурса, над которым выполнена операция. При протоколировании в режиме ядра в поле 4 вносится систем"/>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <text value="системный идентификатор ресурса. Поле 5 необходимо, поскольку протоколирование обращений к ресурсам разных классов может происходить в разных режимах. При этом в записях могут появляться как псевдонимы, так и системные идентификаторы одного и того же процесса. Поэтому, чтобы построить историю процесса в графе выполнения, необходимо знать их соответствие."/>
        <command value="\subsection*">
          <braces>
            <braces>
              <text value="{}"/>
              <text value="Протоколирование"/>
            </braces>
          </braces>
          <braces/>
          <braces>
            <text value="При реализации протоколирования необходимо учитывать следующие обстоятельства:"/>
          </braces>
        </command>
        <itemize/>
      </section>
      <section id="id57">
        <braces>
          <text value="\section{}"/>
        </braces>
        <text value="Заключение"/>
        <text value="Рассмотрены некоторые вопросы реализации прозрачной отказоустойчивости серверов приложений. В отличие от наиболее часто применяемых методов использования специальных программных систем сервером и приложениями предлагаемый подход позволяет работать со стандартными серверными и клиентскими приложениями. Предлагаемая технология связана с внесением некоторых изменений в состав ядра операционной системы. Поэтому эта технология может быть реализована либо в кластерах, работающих под UNIX-подобными системами с открытым кодом, либо самими организациями-разработчиками используемых операционных систем. Основная идея предлагаемой реализации прозрачной отказоустойчивости приложений состоит в совместном использовании технологий виртуализации операционной среды, протоколирования событий и создания контрольных точек, восстановления работы серверного приложения после отказа на основании последней контрольной точки и протокола. Каждая из этих технологий не является новой, они применялись в различных системах, однако пока неизвестны прозрачные отказоустойчивые системы, построенные на сумме этих технологий и обеспечивающие безотказную работу стандартных серверных приложений. При реализации предлагаемых методов важным аспектом является минимизация накладных расходов, связанных с дополнительными вычислительными работами, необходимыми для организации протоколирования работы в стабильной памяти. Проведенные исследования показали причины основных накладных расходов и позволили конкретизировать направление исследований с"/>
        <command value="\mbox">
          <braces>
            <braces>
              <text value="{}"/>
              <text value="целью"/>
            </braces>
          </braces>
          <braces/>
          <braces>
            <text value="их снижения. По-видимому, накладные расходы удастся довести до 30"/>
          </braces>
        </command>
        <text value="или немного меньшей величины. Такую потерю производительности можно рассматривать как приемлемую плату за реализацию важной функциональности по обеспечению прозрачной отказоустойчивости сервера приложений. Целью продолжающейся работы является разработка эффективных алгоритмов и их программная"/>
        <command value="\mbox">
          <braces>
            <braces>
              <text value="{}"/>
              <text value="реализация"/>
            </braces>
          </braces>
          <braces/>
          <braces>
            <text value=", позволяющая достичь именно таких параметров."/>
          </braces>
          <braces>
            <braces>
              <text value="{}"/>
              <command value="\small"/>
              <command value="\frenchspacing">
                <braces>
                  <braces>
                    <text value="{}"/>
                  </braces>
                </braces>
              </command>
            </braces>
          </braces>
        </command>
        <command value="\addcontentsline">
          <braces>
            <braces>
              <text value="{}"/>
              <text value="toc"/>
            </braces>
          </braces>
          <braces/>
          <braces>
            <braces>
              <text value="{}"/>
              <text value="section"/>
            </braces>
          </braces>
          <braces/>
          <braces>
            <braces>
              <text value="{}"/>
              <text value="Литература"/>
            </braces>
          </braces>
          <braces/>
        </command>
        <command value="\begin">
          <braces>
            <braces>
              <text value="{}"/>
              <text value="99"/>
            </braces>
          </braces>
          <braces/>
        </command>
        <item id="id58" value="\bibitem">
          <braces>
            <text value="\bibitem{1zak}"/>
          </braces>
          <braces>
            <text value="{}"/>
            <command value="\sf">
              <braces>
                <text value="http://www.netapp.com/products/filer/index.html"/>
              </braces>
              <braces/>
              <braces>
                <text value="(сайт фирмы Network Appliance Inc.)."/>
              </braces>
            </command>
          </braces>
        </item>
        <item id="id59" value="\bibitem">
          <braces>
            <text value="\bibitem{2zak}"/>
          </braces>
        </item>
        <author value="\Au{}"/>
        <text value="Pfister G."/>
        <text value="In search of clusters: The coming battle in lowly parallel computing. N.Y.: Prentice Hall, 1995."/>
        <item id="id60" value="\bibitem">
          <braces>
            <text value="\bibitem{3zak}"/>
          </braces>
          <text value="MPI-2: Extensions to the Message-Passing Interface."/>
          <braces>
            <text value="{}"/>
            <command value="\sf">
              <braces>
                <text value="http://www.mpi-forum.org/docs/mpi-20-html/mpi2-report.html"/>
              </braces>
              <braces/>
              <braces>
                <text value="."/>
              </braces>
            </command>
          </braces>
        </item>
        <item id="id61" value="\bibitem">
          <braces>
            <text value="\bibitem{4zak}"/>
          </braces>
        </item>
        <author value="\Au{}"/>
        <text value="Zhong H., Nieh J."/>
        <text value="CRAK: Linux checkpoint/restart as a kernel module. Technical Report CUCS-014-01. Department of Computer Science, Columbia University, 2001."/>
        <item id="id62" value="\bibitem">
          <braces>
            <text value="\bibitem{5zak}"/>
          </braces>
        </item>
        <author value="\Au{}"/>
        <text value="Roman E."/>
        <text value="A survey of checkpoint/restart implementations. Berkeley: Lawrence Berkeley National Laboratory Technical Report (publication LBNL-54942), 2003."/>
        <item id="id63" value="\bibitem">
          <braces>
            <text value="\bibitem{6zak}"/>
          </braces>
        </item>
        <author value="\Au{}"/>
        <text value="Sankaran S., Squyres J."/>
        <text value="M., Barrett B., Lumsdaine A., Duell J., Hargrove P., Roman E."/>
        <text value="The LAM/MPI checkpoint/restart framework: System-initiated checkpointing. LACSI Symposium, Sante Fe, New Mexico, USA, 2003."/>
        <item id="id64" value="\bibitem">
          <braces>
            <text value="\bibitem{7zak}"/>
          </braces>
        </item>
        <author value="\Au{}"/>
        <text value="Захаров В."/>
        <text value="Н., Козмидиади В."/>
        <text value="А."/>
        <text value="Реализация отказоустойчивости серверов приложений // Системы высокой доступности, 2006. Т."/>
        <text value="2. №"/>
        <text value="2. С. 56--62."/>
        <item id="id65" value="\bibitem">
          <braces>
            <text value="\bibitem{8zak}"/>
          </braces>
        </item>
        <author value="\Au{}"/>
        <text value="Lamport L."/>
        <text value="Time, clocks, and the ordering of events in a distributed system // Communications of the ACM, 1978. V. 21. №"/>
        <text value="7. P. 558--565."/>
        <item id="id66" value="\bibitem">
          <braces>
            <text value="\bibitem{9zak}"/>
          </braces>
        </item>
        <author value="\Au{}"/>
        <text value="Захаров В."/>
        <text value="Н., Козмидиади В."/>
        <text value="А., Кузьмин А."/>
        <text value="В."/>
        <text value="Описание недетерминированного поведения и проблема отказоустойчивости приложений // В кн.: Системы и средства информатики / Под. ред. И.А. Соколова. М.: Наука, 2005. Вып. 15. С. 338--358."/>
        <item id="id67" value="\bibitem">
          <braces>
            <text value="\bibitem{10zak}"/>
          </braces>
        </item>
        <author value="\Au{}"/>
        <text value="King S."/>
        <text value="T., Dunlap G."/>
        <text value="W., Chen P."/>
        <text value="M."/>
        <text value="Operating system support for virtual machines. 2003 Annual USENIX Technical Conference Proceedings, 2003."/>
        <item id="id68" value="\bibitem">
          <braces>
            <text value="\bibitem{11zak}"/>
          </braces>
        </item>
        <author value="\Au{}"/>
        <text value="Захаров В."/>
        <text value="Н."/>
        <text value="Виртуализация как информационная технология // В кн.: Системы и средства информатики: Спец. вып. Научно-методологические проблемы информатики / Под ред. К."/>
        <text value="К. Колина. М.: ИПИ РАН, 2006. С. 279--298."/>
        <item id="id69" value="\bibitem">
          <braces>
            <text value="\bibitem{12zak}"/>
          </braces>
        </item>
        <author value="\Au{}"/>
        <text value="Maloy J."/>
        <text value="Transparent inter process communication (TIPC)."/>
        <braces>
          <text value="{}"/>
          <command value="\sf">
            <braces>
              <text value="http://tipc.sourceforge.net/"/>
            </braces>
            <braces/>
            <braces>
              <text value="."/>
            </braces>
          </command>
          <command value="\end">
            <braces>
              <braces>
                <text value="{}"/>
                <text value="thebibliography"/>
              </braces>
            </braces>
            <braces/>
            <braces/>
            <braces/>
          </command>
          <command value="\end">
            <braces>
              <braces>
                <text value="{}"/>
                <text value="multicols"/>
              </braces>
            </braces>
            <braces/>
          </command>
        </braces>
        <command value="\label">
          <braces>
            <braces>
              <text value="{}"/>
              <text value="end"/>
              <command value="\stat">
                <braces/>
              </command>
            </braces>
          </braces>
        </command>
      </section>
    </fulltext>
  </paper>
</papers>