<?xml version="1.0" encoding="utf-8"?>
<papers>
  <paper>
    <metadata>
      <annotation value="\Abst{Описана потоковая модель вычислений с динамически формируемым контекстом, а также особенности ее архитектурной реализации. Потоковая модель вычислений позволяет решать проблемы, возникающие при создании и применении суперкомпьютеров. Одной из таких проблем является то, что с ростом возможности максимального распараллеливания, предоставляемой пользователям создателями современной аппаратуры, все сложнее становится загрузить постоянно увеличивающееся число функциональных устройств вычислительных ядер, оставаясь в рамках традиционного программирования. Описаны преимущества предлагаемой модели вычислений. Сравниваются парадигма &amp;lt;&amp;lt;раздачи&amp;gt;&amp;gt;, в которой работает потоковая модель вычислений, и традиционная парадигма &amp;lt;&amp;lt;сбора&amp;gt;&amp;gt;. Приведены основные особенности архитектуры параллельной потоковой вычислительной системы (ППВС) &amp;lt;&amp;lt;Буран&amp;gt;&amp;gt; и ее отличия от классических потоковых вычислительных систем. Проведенные исследования позволяют надеяться, что предложенная модель вычислений станет в будущем основной парадигмой программирования для масштабных параллельных вычислений.}"/>
      <keywords>
        <braces>
          <text value="\KW{потоковая модель вычислений; парадигма раздачи; ассоциативная память; локализация вычислений}"/>
        </braces>
      </keywords>
    </metadata>
    <fulltext>
      <literature/>
      <text value="zmeev"/>
      <text value="ПОТОКОВАЯ МОДЕЛЬ ВЫЧИСЛЕНИЙ КАК ПАРАДИГМА ПРОГРАММИРОВАНИЯ БУДУЩЕГО"/>
      <text value="Потоковая модель вычислений как парадигма программирования будущего"/>
      <text value="Д."/>
      <text value="Н. Змеев$^1$, А."/>
      <text value="В. Климов$^2$, Н."/>
      <text value="Н. Левченко$^3$, А."/>
      <text value="С. Окунев$^4$, А."/>
      <text value="Л. Стемпковский$^5$"/>
      <text value="Д."/>
      <text value="Н. Змеев, А."/>
      <text value="В. Климов, Н."/>
      <text value="Н. Левченко и др."/>
      <command value="\titel">
        <braces>
          <braces>
            <text value="{}"/>
            <command value="\tit">
              <braces/>
              <braces>
                <braces>
                  <text value="{}"/>
                  <command value="\aut">
                    <braces/>
                    <braces>
                      <braces>
                        <text value="{}"/>
                        <command value="\autkol">
                          <braces/>
                          <braces>
                            <braces>
                              <text value="{}"/>
                              <command value="\titkol">
                                <braces/>
                              </command>
                            </braces>
                          </braces>
                        </command>
                      </braces>
                    </braces>
                  </command>
                </braces>
              </braces>
            </command>
          </braces>
        </braces>
      </command>
      <command value="\renewcommand">
        <braces>
          <braces>
            <text value="{}"/>
            <command value="\thefootnote">
              <braces/>
              <braces>
                <braces>
                  <text value="{}"/>
                  <command value="\arabic">
                    <braces>
                      <braces>
                        <text value="{}"/>
                        <text value="footnote"/>
                      </braces>
                    </braces>
                    <braces/>
                    <braces/>
                  </command>
                </braces>
              </braces>
            </command>
          </braces>
        </braces>
      </command>
      <command value="\footnotetext">
        <braces>
          <text value="\footnotetext[1]{}"/>
        </braces>
      </command>
      <text value="Институт проблем проектирования в микроэлектронике Российской академии наук, zmejevdn@ippm.ru"/>
      <command value="\footnotetext">
        <braces>
          <text value="\footnotetext[2]{}"/>
        </braces>
      </command>
      <text value="Институт проблем проектирования в микроэлектронике Российской академии наук, klimov@ippm.ru"/>
      <command value="\footnotetext">
        <braces>
          <text value="\footnotetext[3]{}"/>
        </braces>
      </command>
      <text value="Институт проблем проектирования в микроэлектронике Российской академии наук, nick@ippm.ru"/>
      <command value="\footnotetext">
        <braces>
          <text value="\footnotetext[4]{}"/>
        </braces>
      </command>
      <text value="Институт проблем проектирования в микроэлектронике Российской академии наук, oku@ippm.ru"/>
      <command value="\footnotetext">
        <braces>
          <text value="\footnotetext[5]{}"/>
        </braces>
      </command>
      <text value="Институт проблем проектирования в микроэлектронике Российской академии наук, ippm@ippm.ru"/>
      <command value="\vskip">
        <braces>
          <text value="14pt plus 9pt minus 6pt"/>
        </braces>
      </command>
      <command value="\thispagestyle">
        <braces>
          <braces>
            <text value="{}"/>
            <text value="headings"/>
          </braces>
        </braces>
        <braces/>
      </command>
      <command value="\begin">
        <braces>
          <braces>
            <text value="{}"/>
            <text value="2"/>
          </braces>
        </braces>
        <braces/>
      </command>
      <command value="\label">
        <braces>
          <braces>
            <text value="{}"/>
            <text value="st"/>
            <command value="\stat">
              <braces/>
            </command>
          </braces>
        </braces>
      </command>
      <section id="id1">
        <braces>
          <text value="\section{}"/>
        </braces>
        <text value="Введение"/>
        <text value="В области высокопроизводительных вычислений существует проблема, которая заключается в том, что с ростом возможности максимального распараллеливания, предоставляемой пользователям создателями современной аппаратуры, все сложнее становится загрузить постоянно увеличивающееся число функциональных устройств вычислительных ядер, оставаясь в рамках традиционного программирования по фон Нейману. Можно выделить две основные причины этой проблемы:"/>
        <enumerate/>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <text value="бесконечная в две стороны лента. Работа выполняется пошагово, т."/>
        <text value="е."/>
        <text value="последовательно. Посмотрим, к чему это ведет в связи с задачей загрузить работой систему из большого числа элементов, способных работать параллельно."/>
        <figure id="id2" value="Token(TokenType.COMMAND&amp;quot;, &amp;quot;\begin{figure*}&#10;         \vspace*{1pt}&#10; \begin{center}&#10; \mbox{%&#10; \epsfxsize=140.218mm&#10; \epsfbox{zme-1.eps}&#10; }&#10; \end}&#10; \vspace*{-11pt}&#10;\Caption{Потоковая модель вычислений с~динамически формируемым контекстом}&#10;%\vspace*{5pt}&#10;\end{figure*}&amp;quot;, line=98, col=16)">
          <command value="\specialsymbol">
            <braces>
              <text value="~---"/>
            </braces>
          </command>
          <text value="одни передают сообщения, другие ждут и принимают. Таким образом возникает модель SPMD с MPI"/>
          <command value="\footnote">
            <braces/>
            <braces>
              <text value="6"/>
            </braces>
            <braces/>
            <braces>
              <braces>
                <text value="{}"/>
              </braces>
            </braces>
          </command>
          <command value="\specialsymbol">
            <braces>
              <text value="~---"/>
            </braces>
          </command>
          <command value="\specialsymbol">
            <braces>
              <text value="~---"/>
            </braces>
          </command>
          <command value="\specialsymbol">
            <braces>
              <text value="~---"/>
            </braces>
          </command>
          <text value="интерфейс передачи сообщений)."/>
          <text value=". В модели GPGPU"/>
          <command value="\footnote">
            <braces/>
            <braces>
              <text value="7"/>
            </braces>
            <braces/>
            <braces>
              <braces>
                <text value="{}"/>
              </braces>
            </braces>
          </command>
          <command value="\specialsymbol">
            <braces>
              <text value="~---"/>
            </braces>
          </command>
          <command value="\specialsymbol">
            <braces>
              <text value="~---"/>
            </braces>
          </command>
          <text value="универсальные вычисления на графических процессорах)."/>
          <command value="\specialsymbol">
            <braces>
              <text value="~---"/>
            </braces>
          </command>
          <text value="та же нить, только выполняемая над длинным вектором, или иногда много нитей, по одной для каждого элемента, но уже не взаимодействующих. И как развитие возникает представление о вложенном параллелизме: одна нить распадается на многие, причем все они должны быть завершены, прежде чем родительская нить продолжит работу. Последнее означает наличие барьера, который может приводить к простоям."/>
          <braces>
            <text value="{}"/>
            <command value="\looseness">
              <braces>
                <text value="=1"/>
              </braces>
              <braces/>
              <braces>
                <text value="Второй пункт в этом случае ставит следующие вопросы: как обеспечить прочтение другой нитью записанные данные и как узнать в другой нити, что данные записаны и их можно читать? Авторы видят альтернативу в том, чтобы алгоритм сразу представлять как многоточечный, содержащий много точек управления. Одна активная операция (команда) может &amp;lt;&amp;lt;передать управление&amp;gt;&amp;gt; нескольким операциям, тогда как новая операция для начала своей работы может требовать нескольких передач управления ей. Вместе"/>
              </braces>
            </command>
          </braces>
          <command value="\linebreak">
            <braces>
              <text value="\linebreak"/>
            </braces>
          </command>
          <command value="\specialsymbol">
            <braces>
              <text value="~---"/>
            </braces>
          </command>
          <text value="по готовности входных данных. Для обеспечения многократности повторения однотипных действий, на чем стоит всякое программирование, вводим для всякой команды (или программы узла)"/>
          <command value="\textit">
            <braces>
              <text value="\textit{}"/>
            </braces>
            <text value="контекст"/>
          </command>
          <text value=", он же адрес, или набор индексов. Передача управления на начало узла должна содержать кроме имени (номера) узла еще и необходимый набор индексов, определяющих конкретный экземпляр узла-получателя."/>
          <braces>
            <text value="{}"/>
          </braces>
        </figure>
      </section>
      <section id="id3">
        <braces>
          <text value="\section{}"/>
        </braces>
        <text value="Потоковая модель вычислений"/>
        <command value="\vspace*">
          <braces>
            <braces>
              <text value="{}"/>
              <text value="-16pt"/>
            </braces>
          </braces>
          <braces/>
          <braces>
            <text value="Такая модель существует, это предлагаемая авторами потоковая модель вычислений с динамически формируемым контекстом (рис. 1), воплощенная в языке программирования DFL (dynamic fuzzy logic)"/>
          </braces>
        </command>
        <command value="\cite">
          <braces>
            <braces>
              <text value="{}"/>
              <text value="1-zm, 2-zm"/>
            </braces>
          </braces>
          <braces/>
        </command>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <command value="\textit">
          <braces>
            <text value="\textit{}"/>
          </braces>
          <text value="контекст"/>
        </command>
        <text value="."/>
        <figure id="id4" value="Token(TokenType.COMMAND&amp;quot;, &amp;quot;\begin{figure*}&#10;  \vspace*{1pt}&#10; \begin{center}&#10; \mbox{%&#10; \epsfxsize=137.625mm&#10; \epsfbox{zme-2.eps}&#10; }&#10; \end}&#10; \vspace*{-11pt}&#10;  \Caption{Парадигмы &amp;lt;&amp;lt;сбора&amp;gt;&amp;gt;~(\textit{а}) и~&amp;lt;&amp;lt;раздачи&amp;gt;&amp;gt;~(\textit{б})}&#10;  \end{figure*}&amp;quot;, line=167, col=16)">
          <command value="\specialsymbol">
            <braces>
              <text value="~---"/>
            </braces>
          </command>
          <text value="токены"/>
          <command value="\footnote">
            <braces>
              <text value="\footnote{}"/>
            </braces>
          </command>
          <command value="\specialsymbol">
            <braces>
              <text value="~---"/>
            </braces>
          </command>
          <text value="это структура данных, в состав которой входит предаваемый операнд (данное), ключ с контекстом и адресом программного узла, маска и ряд других специальных признаков."/>
          <text value=". Это является главным принципом управления потоком данных. При активации выполняется код программы узла, в котором вычисляются новые данные (исключительно на основе значений входов и атрибутов ключа) и посылаются специальными операторами на другие узлы, причем атрибуты ключа адресата вычисляются непосредственно в этом же коде. Это означает, что работа производится в парадигме &amp;lt;&amp;lt;раздачи&amp;gt;&amp;gt;"/>
          <command value="\cite">
            <braces>
              <braces>
                <text value="{}"/>
                <text value="3-zm"/>
              </braces>
            </braces>
            <braces/>
            <braces>
              <text value=". Как видится авторам, корень проблемы фон-неймановского программирования заключается в том, что в ней реализуется"/>
            </braces>
          </command>
          <command value="\textit">
            <braces>
              <text value="\textit{}"/>
            </braces>
            <text value="парадигма &amp;lt;&amp;lt;сбора&amp;gt;&amp;gt;"/>
          </command>
          <text value=": для нее характерно, что только потребитель данных знает, какие данные ему нужны и где их взять, и сам их запрашивает, указывая имя переменной (рис. 2,"/>
          <command value="\textit">
            <braces>
              <text value="\textit{}"/>
            </braces>
            <text value="а"/>
          </command>
          <text value="). В этих условиях аппаратуре трудно предвидеть, какие данные будут нужны. Для более качественной стратегии перемещения данных была бы более продуктивной противоположная традиционной"/>
          <command value="\textit">
            <braces>
              <text value="\textit{}"/>
            </braces>
            <text value="парадигма &amp;lt;&amp;lt;раздачи&amp;gt;&amp;gt;"/>
          </command>
          <text value=", когда производитель каждого нового значения знает, кому оно потребуется, и самостоятельно обеспечивает рассылку по нужным адресам. А получателю тогда остается просто &amp;lt;&amp;lt;пассивно дожидаться&amp;gt;&amp;gt; прихода данных, ничего не зная об их источнике (рис. 2,"/>
          <command value="\textit">
            <braces>
              <text value="\textit{}"/>
            </braces>
            <text value="б"/>
          </command>
          <command value="\specialsymbol">
            <braces>
              <text value="~---"/>
            </braces>
          </command>
          <text value="тогда как в парадигме &amp;lt;&amp;lt;сбора&amp;gt;&amp;gt; одно сообщение на запись и еще по два на каждое использование (запрос и ответ). Наиболее эффективным образом это реализуется через ассоциативную память"/>
          <command value="\footnote">
            <braces>
              <text value="\footnote{}"/>
            </braces>
          </command>
          <command value="\specialsymbol">
            <braces>
              <text value="~---"/>
            </braces>
          </command>
          <text value="память с выборкой по содержимому."/>
          <text value=". Заметим, что в этом случае обычная память не нужна. Всякое значение, необходимое для совершения операции узла, просто должно быть отправлено ему на один из входов другим ка"/>
          <command value="\specialsymbol">
            <braces>
              <text value="~---"/>
            </braces>
          </command>
          <text value="ассоциативная, в ней &amp;lt;&amp;lt;адресом&amp;gt;&amp;gt; является имя/номер узла с набором его индексов. Этот &amp;lt;&amp;lt;адрес&amp;gt;&amp;gt; называется"/>
          <command value="\textit">
            <braces>
              <text value="\textit{}"/>
            </braces>
            <text value="ключом"/>
          </command>
          <text value=". Кроме хранения, в памяти также происходит сопоставление (сравнение) ключей токенов, необходимое для формирования групп токенов, направленных на один и тот же узел (с одинаковыми именем и атрибутами ключа)"/>
          <command value="\cite">
            <braces>
              <braces>
                <text value="{}"/>
                <text value="4-zm"/>
              </braces>
            </braces>
            <braces/>
          </command>
          <command value="\specialsymbol">
            <braces>
              <text value="~---"/>
            </braces>
          </command>
          <command value="\specialsymbol">
            <braces>
              <text value="~---"/>
            </braces>
          </command>
          <text value="и этой &amp;lt;&amp;lt;памятью&amp;gt;&amp;gt; выглядит сложнее: процессор посылает в память данные с указанием ключа и номера-имени входа, а &amp;lt;&amp;lt;память&amp;gt;&amp;gt; добавляет их к накапливаемым на входах узлов и, если возникает полный комплект, отправляет в исполнительное устройство задание на выполнение операции узла. Эта операция может представлять собой небольшую программу в обычной парадигме, которая с переданными ей данными отработает от начала до конца, без каких-либо ожиданий, и, возможно, породит посылки новых данных в другие узлы, одновременно стирая (по умолчанию) использованные данные со своих входов. Таким образом решается много проблем: программа узла всегда имеет нужные ей данные локально, при этом программа не прерывается на подкачку дополнительных данных: активность возникает только тогда, когда все нужные для выполнения программы узла данные имеются в наличии. Затем активность исчезает, передав потенциалы активностей в виде результирующих данных другим узлам, причем ответа ждать не надо: все такие сообщения (передачи токенов) односторонние."/>
          <command value="\begin"/>
          <command value="\small"/>
          <center/>
          <command value="\vspace*">
            <braces>
              <braces>
                <text value="{}"/>
                <text value="6pt"/>
              </braces>
            </braces>
            <braces/>
          </command>
          <command value="\end">
            <braces>
              <braces>
                <text value="{}"/>
                <text value="table*"/>
              </braces>
            </braces>
            <braces/>
          </command>
        </figure>
      </section>
      <section id="id5">
        <braces>
          <text value="\section{}"/>
        </braces>
        <text value="Сравнение параллельной потоковой вычислительной системы &amp;lt;&amp;lt;Буран&amp;gt;&amp;gt; с классическими dataflow-системами"/>
        <text value="Классические потоковые системы (dataflow)"/>
        <command value="\cite">
          <braces>
            <braces>
              <text value="{}"/>
              <text value="5-zm"/>
            </braces>
          </braces>
          <braces/>
          <braces>
            <text value=", которые разрабатывались в 1980-х гг."/>
          </braces>
        </command>
        <text value="с целью преодоления проблем фон-неймановской модели вычислений, представляли собой по большей части вычислительные системы для выполнения традиционных (обычных) программ, но в новой модели вычислений. С этой же позиции создавались и новые высокоуровневые языки программирования с однократным присваиванием. Работы в этой области были свернуты потому, что в те времена еще не стояли так остро проблемы распараллеливания и был недостаточно высок технологический уровень развития вычислительной техники. В настоящее время проблема создания параллельных программ с высокой степенью масштабируемости выходит на первый план при наличии многоядерных (многопроцессорных) систем огромной мощности и интеграции вычислительной аппаратуры. В основе системы, которая разрабатывается в ИППМ РАН (ППВС &amp;lt;&amp;lt;Буран&amp;gt;&amp;gt;) лежит, прежде всего, совершенно новая модель вычислений, для которой создаются новые алгоритмы в рамках нового языка DFL и новой парадигмы программирования. Еще одним ключевым отличием от классических dataflow-систем (см."/>
        <text value="таблицу) является аппаратно поддержанная работа с динамически формируемым контекстом, что дает возможность программисту реализовывать новые принципы организации параллельных вычислительных процессов, повысить эффективность программирования, использовать контекст для распределения вычислений, а также использовать все поля контекста для программирования. В классических потоковых системах работа с контекстом была ограничена и не давала нужной степени свободы. В ППВС"/>
        <text value="6--8"/>
        <text value="контекст полностью доступен программисту. Существенной проблемой классических dataflow-систем была локализация вычислений. В ППВС она решается при помощи созданных функций распределения вычислений, которые в динамике обеспечивают равномерность распределения вычислений по физическим вычислительным ядрам системы, а также минимизацию обменов между вычислительными ядрами и тем самым повышают масштабируемость вычислительной системы и рост ее производительности"/>
        <command value="\cite">
          <braces>
            <braces>
              <text value="{}"/>
              <text value="9-zm"/>
            </braces>
          </braces>
          <braces/>
          <braces>
            <text value=". Планирование вычислений, которое тесно связано с построением иерархии памяти сопоставления, являлось еще одной проблемой классических потоковых систем. В ППВС она решается благодаря применению функций распределения для этапов"/>
          </braces>
        </command>
        <command value="\footnote">
          <braces>
            <text value="\footnote{}"/>
          </braces>
          <text value="Этапом называется группа токенов, которая необходима для выполнения определенного интервала вычислений. Обычно этап связан с более или менее независимым действием, например итерация в программе."/>
        </command>
        <text value="(локализация во времени), которые в динамике разбивают вычислительный процесс на части с помощью небольшой настройки программистом"/>
        <command value="\cite">
          <braces>
            <braces>
              <text value="{}"/>
              <text value="10-zm"/>
            </braces>
          </braces>
          <braces/>
          <braces>
            <text value=". Кроме этого удалось избежать построения сопоставляющей памяти большого объема для хранения ключей и выстроена глобальная иерархия памяти. В отличие от предыдущих классических потоковых систем в ППВС реализуется развитая система команд процессора сопоставления"/>
          </braces>
        </command>
        <command value="\footnote">
          <braces>
            <text value="\footnote{}"/>
          </braces>
        </command>
        <command value="\specialsymbol">
          <braces>
            <text value="~---"/>
          </braces>
        </command>
        <text value="основной узел вычислительного ядра ППВС &amp;lt;&amp;lt;Буран&amp;gt;&amp;gt;, обеспечивающий эффективную работу ассоциативной памяти ключей, синхронизацию вычислительных процессов и ряд других функций."/>
        <text value=", который аппаратно поддерживает функции языка высокого уровня."/>
      </section>
      <section id="id6">
        <braces>
          <text value="\section{}"/>
        </braces>
        <text value="Особенности архитектуры параллельной потоковой вычислительной системы &amp;lt;&amp;lt;Буран&amp;gt;&amp;gt;"/>
        <text value="Можно отметить, что в архитектуре исполняющей системы ППВС &amp;lt;&amp;lt;Буран&amp;gt;&amp;gt; отчетливо проявляются следующие современные тенденции развития в области высокопроизводительных вычислений:"/>
        <command value="\begin"/>
      </section>
    </fulltext>
  </paper>
</papers>